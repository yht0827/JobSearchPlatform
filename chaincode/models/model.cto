/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.example.empty

event TransEvent {
  
}

enum CertificateState {
o NOTMATCHED // (자격증 초기등록 매칭 x)
o EXPIRED // (토익 만료)
o APPROVED // (기업 요청 가능)
o REJECTED // (기업 요청 거부)
}

concept Certificate{
o DateTime passDate // (취득일자)
o CertificateState state default="NOTMATCHED" // (상태정보)
o String name
--> PlatForm include
--> Employee owner
}

asset Toeic identified by toeicId {
o String toeicId // (자격고유번호)
o Integer totalScore // (토익점수)
o DateTime validUntil // (유효기간)
o Certificate certificate
}

asset Gisa identified by gId {
o String gId // (자격고유번호)
o String registName // (자격종목)
o Certificate certificate
}

/**
- participant
*/
  
participant Employee identified by email {
o String email // (플랫폼 ID)
o String password
o String name
o DateTime birth // (생년월일)
o String[] comReq
o String active default="unAuth" // 이메일 인증 하지 않은 초기 상태
--> PlatForm platform
}

abstract participant Institution identified by insId {
o String insId // 기관 번호
o String insName // 기관 이름
}

participant PlatForm extends Institution{}

/**
- Transactions performed on network
*/

transaction SignUp { // (구직자 등록)
o String email
o String password
o String name
o DateTime birth
}

@returns(Employee)
transaction SignIn { // (플랫폼 로그인)
o String email // (플랫폼 ID)
o String password
}

transaction ToeicRegister { // (토익 점수 등록)
o String toeicId 
o Integer totalScore
o DateTime passDate
o String email
o String name 
}

transaction ToeicExpired{ // (토익 만료)  
}
  
transaction GisaRegister{ // (기사 정보 등록)
o String gId
o String registName
o DateTime passDate
o String email
o String name   
}

@returns(String[])
transaction RequsetInfo{ // (기업 요청 처리)
o String email
}
  
transaction UpdateCompanyCount{ // (기업 요청 횟수 업데이트)
o String companyName
o String email
}

transaction ChangeGisaState{
o String email 
}

transaction ChangeToeicState{
o String email 
} 
  
transaction Setting{
}

@returns(Toeic[])
transaction ToeicGet{
o String name
o Integer skipnum
}
  
@returns(Gisa[])
transaction GisaGet{
o String name
o Integer skipnum
}